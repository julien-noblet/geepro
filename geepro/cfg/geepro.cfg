/*
    Default configuration file for geepro
*/

#define TEST_DEVICES
//#include "config.const"
#define IFACE_DUMMY	1
#define IFACE_RS232	2
#define IFACE_LPT	3
#define IFACE_USB	4
#define IFACE_FIREWIRE	5
#define IFACE_ETH	6
#define IFACE_PS2	7

#define ANY		-1
#define YES		1
#define NO		0

lang = auto;
drivers_path = "./drivers:/usr/lib/geepro/drivers";
chips_path = "./chips:/usr/lib/geepro/chips";
shared_path = ".:/usr/share/geepro";
store_vars_dir  = "~/.geepro";
store_vars_file = "geepro.st";    
driver = "willem";

docfile = "./doc/doc_eng.txt";

drivers = "willem:stk200:xilinx_cable_iii:altera_byteblaster:jtag_noname:galblast:funprog";
shared_drv_xml_path = "file://$shared_path/drivers/$driver.xml";
chips = "prom:mcs51:mcs48:exampl:93Cxx:27xx:24Cxx:28xx:hub_lpc:29xx:25xx:i2c_peripheral";


parport_devices = {
    device = {
	path  = "/dev/parport0";
	alias = "LPT 1";
	flags = 0;
    };
    device = {
	path  = "/dev/parport1";
	alias = "LPT 2";
	flags = 0;
    };
    device = {
	path  = "/dev/parport2";
	alias = "LPT 3";
	flags = 0;
    };
};

/*************************************************************************************************************************************************************
*   Compatible USB devices recognized by geepro. Config data structure:
*   device = {
*	vendor_id  = int; // mandatory - vendor id is a part of USB device key identifier
*	product_id = int; // mandatory - product id is a part of USB device key identifier
*	alias  = string;  // mandatory - name that appears on menu list to be choosed
*	class  = int;     // mandatory - interface type ( in most cases it will be IFACE_USB, but it also can be eg IFACE_LPT if device emulates LPT )
*	drivers = string; // mandatory - comma separated programmer's list that support USB device. or "ANY" for all
*	class_id   = int; // optional  - product classification, for unspecified class value is 0xff
*	serial = string;  // optional  - serial number of device
*	device = string;  // optional  - device name returned by device 
*	vendor = string;  // optional  - vendor name returned by device 
*	bus    = int;     // optional  - device bus number. Identify connection point to USB.
*	address = int;    // optional  - device address on bus
*	option  = int;    // optional  - additional flags for driver
*   };
*/

usb_devices = {
    device ={
	vendor_id  = 0x16c0;
	product_id = 0x05dc;
//	class_id   = 0xff;
	vendor = "Geepro";
	device = "USB2Lpt";
	alias  = "Usb to LPT adapter";
	class  = IFACE_LPT;
	drivers = "WILLEM 4.0,JTAG Altera byteblaster";
	option = 1;
    };
    device ={
	vendor_id  = 0x16c0;
	product_id = 0x05dc;
//	class_id   = 0xff;
	device = "USBasp";
	alias  = "USBasp";
	class  = IFACE_USB;
	drivers = "USBasp";
    };
#ifdef TEST_DEVICES
    device ={
	vendor_id  = 0x1822;
	product_id = 0x3202;
	device = "VP7041";
	alias  = "Hotplug test";
	class  = IFACE_RS232;
    };
#endif
};



// example not used yet
/*
driver_cfg = {
    driver = "willem";
    model  = "4.0";
    interface = lp1;
    chips = {
	prom  = "74S474";
	mcs51 = "i8751";
	mcs48 = "i8048";
	93Cxx = "93C46";
	27xx  = "2716,2732";
	24Cxx = "24C02";
	28xx  = "28F040";
	29xx  = "29C512";
	25xx  = "MX25L2005";
    };
};

*/
